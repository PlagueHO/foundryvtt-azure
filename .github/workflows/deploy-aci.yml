name: deploy-aci

on:
  workflow_call:
    inputs:
      LOCATION:
        required: true
        type: string
      BASE_RESOURCE_NAME:
        required: true
        type: string
      RESOURCE_GROUP_NAME:
        required: true
        type: string
      STORAGE_CONFIGURATION:
        required: true
        type: string
      CONTAINER_CONFIGURATION:
        required: true
        type: string
      DEPLOY_BASTION:
        required: false
        type: string
        default: 'false'
    secrets:
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_CLIENT_ID:
        required: true
      FOUNDRY_USERNAME:
        required: true
      FOUNDRY_PASSWORD:
        required: true
      FOUNDRY_ADMIN_KEY:
        required: true

jobs:
  deploy-azure-resources:
    runs-on: ubuntu-latest
    name: Create Azure Resources

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}

      - name: Deploy to Azure Container Instance
        uses: azure/bicep-deploy@v2
        with:
          failOnStdErr: false
          type: deployment
          operation: create
          name: foundryvtt-aas-deployment-${{ github.action_ref }}-${{ github.run_number }}
          scope: subscription
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          location: ${{ inputs.LOCATION }}
          resource-group-name: ${{ inputs.RESOURCE_GROUP_NAME }}
          parameters: >
            baseResourceName=${{ inputs.BASE_RESOURCE_NAME }}
            resourceGroupName=${{ inputs.RESOURCE_GROUP_NAME }}
            location=${{ inputs.LOCATION }}
            foundryUsername=${{ secrets.FOUNDRY_USERNAME }}
            foundryPassword=${{ secrets.FOUNDRY_PASSWORD }}
            foundryAdminKey=${{ secrets.FOUNDRY_ADMIN_KEY }}
            storageConfiguration=${{ inputs.STORAGE_CONFIGURATION }}
            containerConfiguration=${{ inputs.CONTAINER_CONFIGURATION }}
            deployBastion=${{ inputs.DEPLOY_BASTION }}
